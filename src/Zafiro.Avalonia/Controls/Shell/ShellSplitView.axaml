<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:z="clr-namespace:Zafiro.Avalonia.Controls"
        xmlns:behaviors="clr-namespace:Zafiro.Avalonia.Behaviors"
        xmlns:shell="clr-namespace:Zafiro.Avalonia.Controls.Shell">
    <Design.PreviewWith>
        <z:ShellSplitView PaneBackground="#7AD3C9" PaneHeader="Very long title, very long title" x:Name="ShellSplitView" DisplayMode="Overlay" Width="400" Height="300">
            <z:ShellSplitView.PaneHeaderTemplate>
                <DataTemplate>
                    <TextBlock TextAlignment="Left" TextTrimming="CharacterEllipsis" Margin="20 0" VerticalAlignment="Center" Text="{Binding}" />
                </DataTemplate>
            </z:ShellSplitView.PaneHeaderTemplate>
            <z:ShellSplitView.Pane>
                <Border BorderThickness="2">
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center">This is the pane content</TextBlock>
                </Border>
            </z:ShellSplitView.Pane>
            <Border Background="#CDFFFA">
                <TextBlock TextAlignment="Center" VerticalAlignment="Center">This is the content</TextBlock>
            </Border>
        </z:ShellSplitView>
    </Design.PreviewWith>
    <Styles.Resources>

        <ControlTheme x:Key="{x:Type z:ShellSplitView}" TargetType="z:ShellSplitView">
            <Setter Property="DisplayMode" Value="Overlay" />
            <Setter Property="ExpandButtonSize" Value="28" />
            <Setter Property="OpenPaneLength" Value="200" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Grid ColumnDefinitions="Auto *" ShowGridLines="True">
                        <ContentPresenter x:Name="PART_Content" Content="{TemplateBinding Content}" />
                        <Grid ColumnDefinitions="Auto *" ShowGridLines="True" RowDefinitions="Auto *">
                            <Border x:Name="PART_PaneBackground" Grid.RowSpan="2" Background="{TemplateBinding PaneBackground}" />
                            <ContentPresenter HorizontalAlignment="Left" x:Name="PART_PaneRoot" Grid.RowSpan="2" Grid.Row="1" Grid.Column="0" Content="{TemplateBinding Pane}" />
                            <DockPanel MaxWidth="{TemplateBinding OpenPaneLength}">
                                <ToggleButton Width="{TemplateBinding ExpandButtonSize}" Height="{TemplateBinding ExpandButtonSize}" Content="=" IsChecked="{TemplateBinding IsPaneOpen, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" />
                                <ContentPresenter x:Name="PART_PaneHeader" ContentTemplate="{TemplateBinding PaneHeaderTemplate}" Content="{TemplateBinding PaneHeader}" />
                            </DockPanel>
                            <Interaction.Behaviors>
                                <behaviors:PointerPressedOutsideTriggerBehavior IsEnabled="{Binding $parent[z:ShellSplitView].DisplayMode, Converter={x:Static shell:ShellConverters.IsOverlay}}">
                                    <ChangeAvaloniaPropertyAction TargetObject="{Binding $parent[z:ShellSplitView]}" TargetProperty="{x:Static z:ShellSplitView.IsPaneOpenProperty}" Value="{x:False}" />
                                </behaviors:PointerPressedOutsideTriggerBehavior>
                            </Interaction.Behaviors>
                        </Grid>


                    </Grid>
                </ControlTemplate>
            </Setter>

            <Style Selector="^ /template/ :is(Control)#PART_PaneHeader">
                <Setter Property="Transitions">
                    <Setter.Value>
                        <Transitions>
                            <DoubleTransition Property="Opacity" Duration="0:0:0.5" />
                        </Transitions>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style Selector="^ /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Transitions">
                    <Setter.Value>
                        <Transitions>
                            <DoubleTransition Property="Width" Duration="0:0:0.1" />
                        </Transitions>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style Selector="^ /template/ :is(Control)#PART_PaneBackground">
                <Setter Property="Transitions">
                    <Setter.Value>
                        <Transitions>
                            <DoubleTransition Property="Width" Duration="0:0:0.1" />
                        </Transitions>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style Selector="^[IsPaneOpen=False] /template/ :is(Control)#PART_PaneHeader">
                <Setter Property="Opacity" Value="0" />
                <Setter Property="Width" Value="0" />
            </Style>

            <Style Selector="^[IsPaneOpen=True] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="{TemplateBinding OpenPaneLength}"></Setter>
            </Style>
            <Style Selector="^[IsPaneOpen=False][DisplayMode=CompactOverlay] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="{TemplateBinding ExpandButtonSize}" />
            </Style>
            <Style Selector="^[IsPaneOpen=False][DisplayMode=CompactInline] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="{TemplateBinding ExpandButtonSize}" />
            </Style>
            <Style Selector="^[IsPaneOpen=False][DisplayMode=Inline] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="0" />
            </Style>

            <Style Selector="^[DisplayMode=Inline] /template/ :is(Control)#PART_Content">
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.ColumnSpan" Value="2" />
                <Setter Property="Grid.RowSpan" Value="2" />
            </Style>
            <Style Selector="^[DisplayMode=Inline][IsPaneOpen=False] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="0" />
            </Style>
            <Style Selector="^[DisplayMode=Overlay][IsPaneOpen=False] /template/ :is(Control)#PART_PaneBackground">
                <Setter Property="Width" Value="0" />
            </Style>
            <Style Selector="^[DisplayMode=Inline][IsPaneOpen=True] /template/ :is(Control)#PART_Content">
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Grid.Row" Value="1" />
            </Style>
            <Style Selector="^[DisplayMode=Overlay] /template/ :is(Control)#PART_Content">
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.ColumnSpan" Value="2" />
            </Style>
            <Style Selector="^[DisplayMode=Overlay][IsPaneOpen=False] /template/ :is(Control)#PART_PaneRoot">
                <Setter Property="Width" Value="0"></Setter>
            </Style>
            <Style Selector="^[DisplayMode=CompactOverlay] /template/ :is(Control)#PART_Content">
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.ColumnSpan" Value="2" />
            </Style>
            <Style Selector="^[DisplayMode=CompactInline] /template/ :is(Control)#PART_Content">
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.ColumnSpan" Value="2" />
            </Style>
        </ControlTheme>
    </Styles.Resources>
</Styles>