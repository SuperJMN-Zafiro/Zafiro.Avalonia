<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:av="https://github.com/projektanker/icons.avalonia">

    <Styles.Resources>


        <ResourceDictionary>

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="CardBackground" Color="{DynamicResource SystemChromeMediumLowColor}" />
                    <SolidColorBrush x:Key="CardBorder" Color="{DynamicResource SystemChromeHighColor}" />
                    <SolidColorBrush x:Key="CardBorderHover" Color="{DynamicResource SystemChromeBlackLowColor}" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="CardBackground" Color="{DynamicResource SystemChromeLowColor}" />
                    <SolidColorBrush x:Key="CardBorder" Color="{DynamicResource SystemChromeHighColor}" />
                    <SolidColorBrush x:Key="CardBorderHover" Color="{DynamicResource SystemChromeBlackLowColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <ControlTheme x:Key="{x:Type Card}" TargetType="Card">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource CardBorder}" />
                <Setter Property="Background" Value="{DynamicResource CardBackground}" />
                <Setter Property="HeaderBackground" Value="{DynamicResource CardBackground}" />
                <Setter Property="CornerRadius" Value="8" />
                <Setter Property="Padding" Value="15 15 15 15" />
                <Setter Property="HeaderSpacing" Value="10" />
                <Setter Property="HeaderSubheaderSpacing" Value="4" />
                <Setter Property="HeaderHorizontalAlignment" Value="Center" />
                <Setter Property="HeaderVerticalAlignment" Value="Center" />

                <Setter Property="HeaderTheme">
                    <ControlTheme TargetType="ContentControl">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextBox.TextAlignment" Value="Center" />
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    </ControlTheme>
                </Setter>

                <Setter Property="SubheaderTheme">
                    <ControlTheme TargetType="ContentControl">
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextBox.TextAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                    </ControlTheme>
                </Setter>

                <Setter Property="Template">
                    <ControlTemplate>
                        <HeaderedContainer x:Name="Root"
                                           Content="{TemplateBinding Content}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                           ContentTheme="{TemplateBinding ContentTheme}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                           BorderThickness="{TemplateBinding BorderThickness}"
                                           HeaderBackground="{TemplateBinding HeaderBackground}"
                                           Background="{TemplateBinding Background}"
                                           CornerRadius="{TemplateBinding CornerRadius}"
                                           Padding="{TemplateBinding Padding}"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           HeaderSpacing="{TemplateBinding HeaderSpacing}"
                                           BoxShadow="{TemplateBinding BoxShadow}">
                            <HeaderedContainer.Header>
                                <EdgePanel
                                    Spacing="{Binding $parent[Card].HeaderSpacing}"
                                    Margin="{Binding $parent[Card].HeaderPadding}"
                                    StartContent="{Binding $parent[Card].HeaderStartContent}"
                                    StartContentTemplate="{Binding $parent[Card].HeaderStartContentTemplate}"
                                    EndContent="{Binding $parent[Card].HeaderEndContent}"
                                    EndContentTemplate="{Binding $parent[Card].HeaderEndContentTemplate}">
                                    <StackPanel Spacing="{Binding $parent[Card].HeaderSubheaderSpacing}">
                                        <ContentControl
                                            HorizontalAlignment="{Binding $parent[Card].HeaderHorizontalAlignment}"
                                            Theme="{Binding $parent[Card].HeaderTheme}"
                                            Content="{Binding $parent[Card].Header}" ContentTemplate="{Binding $parent[Card].HeaderTemplate}" />
                                        <ContentControl
                                            HorizontalAlignment="{Binding $parent[Card].HeaderHorizontalAlignment}"
                                            Theme="{Binding $parent[Card].SubheaderTheme}"
                                            IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}"
                                            Content="{Binding $parent[Card].Subheader}" ContentTemplate="{Binding $parent[Card].SubheaderTemplate}" />
                                    </StackPanel>
                                </EdgePanel>
                            </HeaderedContainer.Header>
                        </HeaderedContainer>
                    </ControlTemplate>
                </Setter>
            </ControlTheme>

            <ControlTheme x:Key="TransparentCard" BasedOn="{StaticResource {x:Type Card}}" TargetType="Card">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HeaderBackground" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </ControlTheme>

            <!-- Variant: Header laid out to the left with FlexBox, actions to the right -->
            <ControlTheme x:Key="LeftFlexHeaderCard" TargetType="Card" BasedOn="{StaticResource {x:Type Card}}">
                <Setter Property="HeaderHorizontalAlignment" Value="Stretch" />
                <Setter Property="HeaderTheme">
                    <ControlTheme TargetType="ContentControl">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    </ControlTheme>
                </Setter>

                <Setter Property="SubheaderTheme">
                    <ControlTheme TargetType="ContentControl">
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                    </ControlTheme>
                </Setter>
                <Setter Property="Template">
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                BoxShadow="{TemplateBinding BoxShadow}">
                            <SmartDockPanel VerticalSpacing="{TemplateBinding HeaderSpacing}">

                                <!-- Header -->
                                <FlexBox Direction="Row"
                                         DockPanel.Dock="Top"
                                         AlignItems="Center"
                                         JustifyContent="Start"
                                         Wrap="Wrap"
                                         Gap="{Binding $parent[Card].HeaderSpacing}">

                                    <!-- Grupo izquierdo: Inicio + TÃ­tulo como bloque indivisible -->
                                    <Grid ColumnDefinitions="Auto,*"
                                          ColumnSpacing="{Binding $parent[Card].HeaderSpacing}"
                                          FlexBox.Grow="2"
                                          FlexBox.Shrink="1"
                                          FlexBox.Basis="{x:Static FlexBasis.Auto}">

                                        <ContentControl Grid.Column="0"
                                                        Content="{Binding $parent[Card].HeaderStartContent}"
                                                        ContentTemplate="{Binding $parent[Card].HeaderStartContentTemplate}"
                                                        IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}" />

                                        <StackPanel Grid.Column="1"
                                                    Spacing="{Binding $parent[Card].HeaderSubheaderSpacing}"
                                                    HorizontalAlignment="Stretch">
                                            <ContentControl
                                                Theme="{Binding $parent[Card].HeaderTheme}"
                                                HorizontalAlignment="Stretch"
                                                Content="{Binding $parent[Card].Header}"
                                                ContentTemplate="{Binding $parent[Card].HeaderTemplate}" />
                                            <ContentControl
                                                Theme="{Binding $parent[Card].SubheaderTheme}"
                                                HorizontalAlignment="Stretch"
                                                Content="{Binding $parent[Card].Subheader}"
                                                IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                ContentTemplate="{Binding $parent[Card].SubheaderTemplate}" />
                                        </StackPanel>
                                    </Grid>

                                    <!-- Fin: empuja a la derecha; cuando wrappea, ocupa la lÃ­nea completa -->
                                    <ContentControl
                                        FlexBox.MarginLeftAuto="True"
                                        FlexBox.Grow="1"
                                        FlexBox.Shrink="1"
                                        FlexBox.Basis="{x:Static FlexBasis.Content}"
                                        IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}"
                                        Content="{Binding $parent[Card].HeaderEndContent}"
                                        ContentTemplate="{Binding $parent[Card].HeaderEndContentTemplate}" />
                                </FlexBox>

                                <!-- Body -->
                                <ContentPresenter
                                    Content="{TemplateBinding Content}"
                                    Theme="{TemplateBinding ContentTheme}"
                                    IsVisible="{Binding $self.Content, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </SmartDockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter>
            </ControlTheme>

        </ResourceDictionary>

    </Styles.Resources>

    <Design.PreviewWith>
        <StackPanel Spacing="20" Margin="20" Width="600">
            <StackPanel.Styles>
                <StyleInclude Source="../Styles/Button.axaml" />
            </StackPanel.Styles>

            <Card Header="Width and height" Height="300" Subheader="Some subheader" HeaderHorizontalAlignment="Center">
                SOME CONTENT
                <Card.HeaderStartContent>
                    <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="Left" />
                </Card.HeaderStartContent>
                <Card.HeaderEndContent>
                    <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="Right" />
                </Card.HeaderEndContent>
            </Card>

            <Card Theme="{StaticResource LeftFlexHeaderCard}"
                  Header="SOME BIG HEADER IS SUPER BIG" Subheader="Some subheader">
                <Card.HeaderStartContent>
                    <av:Icon Value="fa-wallet" FontSize="32" />
                </Card.HeaderStartContent>
                <Card.HeaderEndContent>
                    <BalancedWrapGrid VerticalAlignment="Center" HorizontalSpacing="8">
                        <Button Content="Do something" Classes="Expand CenterContent" />
                        <Button Content="Refresh" Classes="Expand CenterContent" />
                    </BalancedWrapGrid>
                </Card.HeaderEndContent>

                <!-- Body -->
                <Border Margin="20" CornerRadius="10" Padding="20" />
            </Card>

            <Card Theme="{StaticResource LeftFlexHeaderCard}" Content="HOLA" />

            <ThemeVariantScope RequestedThemeVariant="Dark">
                <Card>
                    <Button>Salud</Button>
                </Card>
            </ThemeVariantScope>
        </StackPanel>

    </Design.PreviewWith>

</Styles>