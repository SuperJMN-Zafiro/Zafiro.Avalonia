<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia">

    <Design.PreviewWith>
        <StackPanel>
            <ReactiveIconButton Content="Click">
                <ReactiveIconButton.Icon>
                    ICON
                </ReactiveIconButton.Icon>
            </ReactiveIconButton>
            <ReactiveIconButton Width="150" TextBlock.TextWrapping="Wrap" Content="This is a long text">
                <ReactiveIconButton.Icon>
                    <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Red" Width="40">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">Icon</TextBlock>
                    </Border>
                </ReactiveIconButton.Icon>
            </ReactiveIconButton>
        </StackPanel>
    </Design.PreviewWith>

    <Styles.Resources>
        <ControlTheme x:Key="{x:Type ReactiveIconButton}" TargetType="ReactiveIconButton">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Button Theme="{TemplateBinding ButtonTheme}"
                            IsDefault="{TemplateBinding IsDefault}"
                            IsCancel="{TemplateBinding IsCancel}"
                            IsTabStop="{TemplateBinding IsTabStop}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Command="{Binding $parent[ReactiveIconButton].Command}">
                        <Button.Content>
                            <DockPanel HorizontalSpacing="8" HorizontalAlignment="{Binding $parent[ReactiveIconButton].HorizontalContentAlignment}">
                                <c:ProgressRing Height="{Binding $self.(IconOptions.Size)}"
                                                IsVisible="{Binding $parent[ReactiveIconButton].Command.IsExecuting^}"
                                                Foreground="{TemplateBinding Foreground}" />
                                <ContentPresenter
                                    Height="{Binding #MainContent.Bounds.Height}"
                                    IsVisible="{Binding !!$parent[ReactiveIconButton].Icon}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Icon}" />
                                <ContentPresenter x:Name="MainContent"
                                                  IsVisible="{Binding !!$parent[ReactiveIconButton].Content}"
                                                  Content="{Binding $parent[ReactiveIconButton].Content}"
                                                  VerticalAlignment="Center" />
                            </DockPanel>
                        </Button.Content>
                    </Button>
                </ControlTemplate>
            </Setter>
            <Style Selector="^ /template/ Button:disabled ContentPresenter">
                <Setter Property="Opacity" Value="0.5" />
            </Style>
        </ControlTheme>
    </Styles.Resources>

</Styles>