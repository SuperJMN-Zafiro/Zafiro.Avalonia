<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:Zafiro.Avalonia.Controls;assembly=Zafiro.Avalonia"
             xmlns:vm="clr-namespace:TestApp.Samples.Controls"
             xmlns:behaviors="clr-namespace:Zafiro.Avalonia.Behaviors;assembly=Zafiro.Avalonia"
             xmlns:heatmaps="clr-namespace:Zafiro.Avalonia.DataViz.Heatmaps;assembly=Zafiro.Avalonia.DataViz"
             xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Collections"
             xmlns:g="clr-namespace:Zafiro.Avalonia.DataViz.Graphs.Control;assembly=Zafiro.Avalonia.DataViz"
             xmlns:avalonia="clr-namespace:Zafiro.Avalonia;assembly=Zafiro.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TestApp.Samples.Controls.ControlsSampleView"
             x:DataType="vm:ControlsSampleViewModel">
    <TabControl>

        <TabControl.Styles>
            <Style Selector="TabControl ItemsPresenter">
                <Setter Property="ZIndex" Value="1" />
            </Style>
        </TabControl.Styles>

        <TabItem Header="TypewriterControl">
            <c:TypewriterControl FontSize="40" VerticalAlignment="Center" TypingLatency="0:0:0.03" TextWrapping="Wrap">
                <c:TypewriterControl.Strings>
                    <avalonia:Strings>
                        <x:String>Yeah! this is Zafiro.Avalonia</x:String>
                        <x:String>Crema for developers</x:String>
                        <x:String>Duro, dur√≠simo</x:String>
                    </avalonia:Strings>
                </c:TypewriterControl.Strings>
            </c:TypewriterControl>
        </TabItem>
        <TabItem Header="CircularProgressBar">
            <StackPanel VerticalAlignment="Center">
                <TextBlock>For your circular needs!</TextBlock>
                <TextBlock>Move the slider to see how it soothes your mind with smooth animations.</TextBlock>
                <Slider x:Name="Slider" Maximum="1" />
                <UniformGrid Rows="1" Height="200">
                    <UniformGrid.Styles>
                        <Style Selector="UniformGrid > :is(Control)">
                            <Setter Property="Margin" Value="20"></Setter>
                        </Style>
                        <Style Selector="c|CircularProgressBar">
                            <Setter Property="Maximum" Value="1" />
                        </Style>
                    </UniformGrid.Styles>
                    <c:CircularProgressBar Value="{Binding #Slider.Value}" Foreground="Red" Background="LightGray" />
                    <c:CircularProgressBar Value="{Binding #Slider.Value}" Foreground="Green" Background="LightGray" />
                    <Viewbox>
                        <Panel >
                            <c:CircularProgressBar Width="200" Height="200" Value="{Binding #Slider.Value}" Foreground="Blue" Background="LightGray" />
                            <TextBlock FontSize="50" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding #Slider.Value, StringFormat={}{0:P0}}"></TextBlock>
                        </Panel></Viewbox>
                </UniformGrid>
            </StackPanel>
        </TabItem>
        <TabItem Header="EasyListBox">
            <!-- <controls:SelectionControl DockPanel.Dock="Top" Selection="{Binding SelectionHandler}" /> -->
            <ListBox x:Name="ListBox"
                     ItemsSource="{Binding Items}"
                     Selection="{Binding SelectionModel}"
                     c:Selection.EnableCheckBoxes="True" Theme="{StaticResource EasyListBox}"
                     SelectionMode="Multiple">
            </ListBox>
        </TabItem>
        <TabItem Header="GradientControl">
            <StackPanel>
                <heatmaps:GradientControl NumberOfDivisions="4" Width="500">
                    <heatmaps:GradientControl.ColorList>
                        <generic:List x:TypeArguments="Color">
                            <Color>Blue</Color>
                            <Color>White</Color>
                            <Color>Red</Color>
                        </generic:List>
                    </heatmaps:GradientControl.ColorList>
                </heatmaps:GradientControl>
                <heatmaps:GradientControl Height="500" BorderBrush="Black" BorderThickness="1"
                                          Theme="{StaticResource Vertical}" NumberOfDivisions="3">
                    <heatmaps:GradientControl.ColorList>
                        <generic:List x:TypeArguments="Color">
                            <Color>Blue</Color>
                            <Color>White</Color>
                            <Color>Red</Color>
                        </generic:List>
                    </heatmaps:GradientControl.ColorList>
                </heatmaps:GradientControl>
            </StackPanel>
        </TabItem>
        <TabItem Header="Proportional Canvas">
            <c:ProportionalCanvas HorizontalMaximum="100" VerticalMaximum="100">
                <Rectangle Fill="Red"
                           c:ProportionalCanvas.Left="0"
                           c:ProportionalCanvas.Top="10"
                           c:ProportionalCanvas.ProportionalWidth="40"
                           c:ProportionalCanvas.ProportionalHeight="20" />
                <Rectangle Fill="Green"
                           c:ProportionalCanvas.Left="60"
                           c:ProportionalCanvas.Top="50"
                           c:ProportionalCanvas.ProportionalWidth="30"
                           c:ProportionalCanvas.ProportionalHeight="20" />
            </c:ProportionalCanvas>
        </TabItem>
        <TabItem Header="Graph">
            <g:GraphControl Margin="-1000"
                            DragButton="Right"
                            Graph="{Binding MutableGraph}">
                <g:GraphControl.ItemTemplate>
                    <DataTemplate DataType="vm:Person">
                        <Ellipse Height="{Binding $self.Width}" Fill="Red">
                            <Ellipse.Width>
                                <MultiBinding Converter="{x:Static vm:CustomConverters.Importance}">
                                    <Binding x:DataType="vm:ControlsSampleViewModel"
                                             Path="$parent[vm:ControlsSampleView].DataContext" />
                                    <Binding />
                                </MultiBinding>
                            </Ellipse.Width>
                            <Interaction.Behaviors>
                                <behaviors:ExecuteCommandOnPointerButtonPressedBehavior RoutingStrategy="Tunnel" Button="Right" Command="{Binding Freeze}" />
                                <behaviors:ExecuteCommandOnPointerButtonReleasedBehavior RoutingStrategy="Tunnel" Button="Right" Command="{Binding Unfreeze}" />
                            </Interaction.Behaviors>
                        </Ellipse>
                    </DataTemplate>
                </g:GraphControl.ItemTemplate>
                <g:GraphControl.EdgeTemplate>
                    <DataTemplate DataType="vm:Friendship">
                        <Line Stroke="Black" StrokeThickness="3">
                            <Line.StartPoint>
                                <MultiBinding Converter="{x:Static g:Converters.CoordinatesToPoint}">
                                    <Binding Path="From.X" />
                                    <Binding Path="From.Y" />
                                </MultiBinding>
                            </Line.StartPoint>
                            <Line.EndPoint>
                                <MultiBinding Converter="{x:Static g:Converters.CoordinatesToPoint}">
                                    <Binding Path="To.X" />
                                    <Binding Path="To.Y" />
                                </MultiBinding>
                            </Line.EndPoint>
                        </Line>
                    </DataTemplate>
                </g:GraphControl.EdgeTemplate>
            </g:GraphControl>
        </TabItem>
        <TabItem Header="GradualGraph">
            <DockPanel>
                <Button ZIndex="1" DockPanel.Dock="Top" Content="Load" Command="{Binding GradualGraph.Load}" />
                <g:GraphControl Margin="-1000" Graph="{Binding GradualGraph}">
                    <g:GraphControl.ItemTemplate>
                        <DataTemplate DataType="vm:Person">
                            <Ellipse Height="{Binding $self.Width}" Fill="Red">
                                <Ellipse.Width>
                                    <MultiBinding Converter="{x:Static vm:CustomConverters.Importance}">
                                        <Binding x:DataType="vm:ControlsSampleViewModel"
                                                 Path="$parent[vm:ControlsSampleView].DataContext" />
                                        <Binding />
                                    </MultiBinding>
                                </Ellipse.Width>
                            </Ellipse>
                        </DataTemplate>
                    </g:GraphControl.ItemTemplate>
                    <g:GraphControl.EdgeTemplate>
                        <DataTemplate DataType="vm:Friendship">
                            <Line Stroke="Black" StrokeThickness="3">
                                <Line.StartPoint>
                                    <MultiBinding Converter="{x:Static g:Converters.CoordinatesToPoint}">
                                        <Binding Path="From.X" />
                                        <Binding Path="From.Y" />
                                    </MultiBinding>
                                </Line.StartPoint>
                                <Line.EndPoint>
                                    <MultiBinding Converter="{x:Static g:Converters.CoordinatesToPoint}">
                                        <Binding Path="To.X" />
                                        <Binding Path="To.Y" />
                                    </MultiBinding>
                                </Line.EndPoint>
                            </Line>
                        </DataTemplate>
                    </g:GraphControl.EdgeTemplate>
                </g:GraphControl>
            </DockPanel>
        </TabItem>
    </TabControl>
</UserControl>